package com.meal.common.dto;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class MealOrderGoodsCalamityExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    public MealOrderGoodsCalamityExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    public MealOrderGoodsCalamityExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    public MealOrderGoodsCalamityExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        MealOrderGoodsCalamityExample example = new MealOrderGoodsCalamityExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    public MealOrderGoodsCalamityExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    public MealOrderGoodsCalamityExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andOrderIdIsNull() {
            addCriterion("order_id is null");
            return (Criteria) this;
        }

        public Criteria andOrderIdIsNotNull() {
            addCriterion("order_id is not null");
            return (Criteria) this;
        }

        public Criteria andOrderIdEqualTo(Integer value) {
            addCriterion("order_id =", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andOrderIdEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("order_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdNotEqualTo(Integer value) {
            addCriterion("order_id <>", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andOrderIdNotEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("order_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdGreaterThan(Integer value) {
            addCriterion("order_id >", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andOrderIdGreaterThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("order_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("order_id >=", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andOrderIdGreaterThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("order_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdLessThan(Integer value) {
            addCriterion("order_id <", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andOrderIdLessThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("order_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdLessThanOrEqualTo(Integer value) {
            addCriterion("order_id <=", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andOrderIdLessThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("order_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdIn(List<Integer> values) {
            addCriterion("order_id in", values, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdNotIn(List<Integer> values) {
            addCriterion("order_id not in", values, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdBetween(Integer value1, Integer value2) {
            addCriterion("order_id between", value1, value2, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdNotBetween(Integer value1, Integer value2) {
            addCriterion("order_id not between", value1, value2, "orderId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdIsNull() {
            addCriterion("goods_id is null");
            return (Criteria) this;
        }

        public Criteria andGoodsIdIsNotNull() {
            addCriterion("goods_id is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsIdEqualTo(Integer value) {
            addCriterion("goods_id =", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("goods_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdNotEqualTo(Integer value) {
            addCriterion("goods_id <>", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdNotEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("goods_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdGreaterThan(Integer value) {
            addCriterion("goods_id >", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdGreaterThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("goods_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("goods_id >=", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdGreaterThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("goods_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdLessThan(Integer value) {
            addCriterion("goods_id <", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdLessThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("goods_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdLessThanOrEqualTo(Integer value) {
            addCriterion("goods_id <=", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdLessThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("goods_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdIn(List<Integer> values) {
            addCriterion("goods_id in", values, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdNotIn(List<Integer> values) {
            addCriterion("goods_id not in", values, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdBetween(Integer value1, Integer value2) {
            addCriterion("goods_id between", value1, value2, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdNotBetween(Integer value1, Integer value2) {
            addCriterion("goods_id not between", value1, value2, "goodsId");
            return (Criteria) this;
        }

        public Criteria andCalamityIdIsNull() {
            addCriterion("calamity_id is null");
            return (Criteria) this;
        }

        public Criteria andCalamityIdIsNotNull() {
            addCriterion("calamity_id is not null");
            return (Criteria) this;
        }

        public Criteria andCalamityIdEqualTo(Integer value) {
            addCriterion("calamity_id =", value, "calamityId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCalamityIdEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("calamity_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCalamityIdNotEqualTo(Integer value) {
            addCriterion("calamity_id <>", value, "calamityId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCalamityIdNotEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("calamity_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCalamityIdGreaterThan(Integer value) {
            addCriterion("calamity_id >", value, "calamityId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCalamityIdGreaterThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("calamity_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCalamityIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("calamity_id >=", value, "calamityId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCalamityIdGreaterThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("calamity_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCalamityIdLessThan(Integer value) {
            addCriterion("calamity_id <", value, "calamityId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCalamityIdLessThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("calamity_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCalamityIdLessThanOrEqualTo(Integer value) {
            addCriterion("calamity_id <=", value, "calamityId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCalamityIdLessThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("calamity_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCalamityIdIn(List<Integer> values) {
            addCriterion("calamity_id in", values, "calamityId");
            return (Criteria) this;
        }

        public Criteria andCalamityIdNotIn(List<Integer> values) {
            addCriterion("calamity_id not in", values, "calamityId");
            return (Criteria) this;
        }

        public Criteria andCalamityIdBetween(Integer value1, Integer value2) {
            addCriterion("calamity_id between", value1, value2, "calamityId");
            return (Criteria) this;
        }

        public Criteria andCalamityIdNotBetween(Integer value1, Integer value2) {
            addCriterion("calamity_id not between", value1, value2, "calamityId");
            return (Criteria) this;
        }

        public Criteria andCalamityNameIsNull() {
            addCriterion("calamity_name is null");
            return (Criteria) this;
        }

        public Criteria andCalamityNameIsNotNull() {
            addCriterion("calamity_name is not null");
            return (Criteria) this;
        }

        public Criteria andCalamityNameEqualTo(String value) {
            addCriterion("calamity_name =", value, "calamityName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCalamityNameEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("calamity_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCalamityNameNotEqualTo(String value) {
            addCriterion("calamity_name <>", value, "calamityName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCalamityNameNotEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("calamity_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCalamityNameGreaterThan(String value) {
            addCriterion("calamity_name >", value, "calamityName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCalamityNameGreaterThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("calamity_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCalamityNameGreaterThanOrEqualTo(String value) {
            addCriterion("calamity_name >=", value, "calamityName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCalamityNameGreaterThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("calamity_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCalamityNameLessThan(String value) {
            addCriterion("calamity_name <", value, "calamityName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCalamityNameLessThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("calamity_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCalamityNameLessThanOrEqualTo(String value) {
            addCriterion("calamity_name <=", value, "calamityName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCalamityNameLessThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("calamity_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCalamityNameLike(String value) {
            addCriterion("calamity_name like", value, "calamityName");
            return (Criteria) this;
        }

        public Criteria andCalamityNameNotLike(String value) {
            addCriterion("calamity_name not like", value, "calamityName");
            return (Criteria) this;
        }

        public Criteria andCalamityNameIn(List<String> values) {
            addCriterion("calamity_name in", values, "calamityName");
            return (Criteria) this;
        }

        public Criteria andCalamityNameNotIn(List<String> values) {
            addCriterion("calamity_name not in", values, "calamityName");
            return (Criteria) this;
        }

        public Criteria andCalamityNameBetween(String value1, String value2) {
            addCriterion("calamity_name between", value1, value2, "calamityName");
            return (Criteria) this;
        }

        public Criteria andCalamityNameNotBetween(String value1, String value2) {
            addCriterion("calamity_name not between", value1, value2, "calamityName");
            return (Criteria) this;
        }

        public Criteria andCalamitySnIsNull() {
            addCriterion("calamity_sn is null");
            return (Criteria) this;
        }

        public Criteria andCalamitySnIsNotNull() {
            addCriterion("calamity_sn is not null");
            return (Criteria) this;
        }

        public Criteria andCalamitySnEqualTo(String value) {
            addCriterion("calamity_sn =", value, "calamitySn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCalamitySnEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("calamity_sn = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCalamitySnNotEqualTo(String value) {
            addCriterion("calamity_sn <>", value, "calamitySn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCalamitySnNotEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("calamity_sn <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCalamitySnGreaterThan(String value) {
            addCriterion("calamity_sn >", value, "calamitySn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCalamitySnGreaterThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("calamity_sn > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCalamitySnGreaterThanOrEqualTo(String value) {
            addCriterion("calamity_sn >=", value, "calamitySn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCalamitySnGreaterThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("calamity_sn >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCalamitySnLessThan(String value) {
            addCriterion("calamity_sn <", value, "calamitySn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCalamitySnLessThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("calamity_sn < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCalamitySnLessThanOrEqualTo(String value) {
            addCriterion("calamity_sn <=", value, "calamitySn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCalamitySnLessThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("calamity_sn <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCalamitySnLike(String value) {
            addCriterion("calamity_sn like", value, "calamitySn");
            return (Criteria) this;
        }

        public Criteria andCalamitySnNotLike(String value) {
            addCriterion("calamity_sn not like", value, "calamitySn");
            return (Criteria) this;
        }

        public Criteria andCalamitySnIn(List<String> values) {
            addCriterion("calamity_sn in", values, "calamitySn");
            return (Criteria) this;
        }

        public Criteria andCalamitySnNotIn(List<String> values) {
            addCriterion("calamity_sn not in", values, "calamitySn");
            return (Criteria) this;
        }

        public Criteria andCalamitySnBetween(String value1, String value2) {
            addCriterion("calamity_sn between", value1, value2, "calamitySn");
            return (Criteria) this;
        }

        public Criteria andCalamitySnNotBetween(String value1, String value2) {
            addCriterion("calamity_sn not between", value1, value2, "calamitySn");
            return (Criteria) this;
        }

        public Criteria andNumberIsNull() {
            addCriterion("`number` is null");
            return (Criteria) this;
        }

        public Criteria andNumberIsNotNull() {
            addCriterion("`number` is not null");
            return (Criteria) this;
        }

        public Criteria andNumberEqualTo(Short value) {
            addCriterion("`number` =", value, "number");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andNumberEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("`number` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNumberNotEqualTo(Short value) {
            addCriterion("`number` <>", value, "number");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andNumberNotEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("`number` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNumberGreaterThan(Short value) {
            addCriterion("`number` >", value, "number");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andNumberGreaterThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("`number` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNumberGreaterThanOrEqualTo(Short value) {
            addCriterion("`number` >=", value, "number");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andNumberGreaterThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("`number` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNumberLessThan(Short value) {
            addCriterion("`number` <", value, "number");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andNumberLessThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("`number` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNumberLessThanOrEqualTo(Short value) {
            addCriterion("`number` <=", value, "number");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andNumberLessThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("`number` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNumberIn(List<Short> values) {
            addCriterion("`number` in", values, "number");
            return (Criteria) this;
        }

        public Criteria andNumberNotIn(List<Short> values) {
            addCriterion("`number` not in", values, "number");
            return (Criteria) this;
        }

        public Criteria andNumberBetween(Short value1, Short value2) {
            addCriterion("`number` between", value1, value2, "number");
            return (Criteria) this;
        }

        public Criteria andNumberNotBetween(Short value1, Short value2) {
            addCriterion("`number` not between", value1, value2, "number");
            return (Criteria) this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("price is null");
            return (Criteria) this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("price is not null");
            return (Criteria) this;
        }

        public Criteria andPriceEqualTo(BigDecimal value) {
            addCriterion("price =", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andPriceEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceNotEqualTo(BigDecimal value) {
            addCriterion("price <>", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andPriceNotEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThan(BigDecimal value) {
            addCriterion("price >", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andPriceGreaterThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("price >=", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andPriceGreaterThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceLessThan(BigDecimal value) {
            addCriterion("price <", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andPriceLessThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("price <=", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andPriceLessThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceIn(List<BigDecimal> values) {
            addCriterion("price in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotIn(List<BigDecimal> values) {
            addCriterion("price not in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("price between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("price not between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPicUrlIsNull() {
            addCriterion("pic_url is null");
            return (Criteria) this;
        }

        public Criteria andPicUrlIsNotNull() {
            addCriterion("pic_url is not null");
            return (Criteria) this;
        }

        public Criteria andPicUrlEqualTo(String value) {
            addCriterion("pic_url =", value, "picUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andPicUrlEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("pic_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPicUrlNotEqualTo(String value) {
            addCriterion("pic_url <>", value, "picUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andPicUrlNotEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("pic_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPicUrlGreaterThan(String value) {
            addCriterion("pic_url >", value, "picUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andPicUrlGreaterThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("pic_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPicUrlGreaterThanOrEqualTo(String value) {
            addCriterion("pic_url >=", value, "picUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andPicUrlGreaterThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("pic_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPicUrlLessThan(String value) {
            addCriterion("pic_url <", value, "picUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andPicUrlLessThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("pic_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPicUrlLessThanOrEqualTo(String value) {
            addCriterion("pic_url <=", value, "picUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andPicUrlLessThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("pic_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPicUrlLike(String value) {
            addCriterion("pic_url like", value, "picUrl");
            return (Criteria) this;
        }

        public Criteria andPicUrlNotLike(String value) {
            addCriterion("pic_url not like", value, "picUrl");
            return (Criteria) this;
        }

        public Criteria andPicUrlIn(List<String> values) {
            addCriterion("pic_url in", values, "picUrl");
            return (Criteria) this;
        }

        public Criteria andPicUrlNotIn(List<String> values) {
            addCriterion("pic_url not in", values, "picUrl");
            return (Criteria) this;
        }

        public Criteria andPicUrlBetween(String value1, String value2) {
            addCriterion("pic_url between", value1, value2, "picUrl");
            return (Criteria) this;
        }

        public Criteria andPicUrlNotBetween(String value1, String value2) {
            addCriterion("pic_url not between", value1, value2, "picUrl");
            return (Criteria) this;
        }

        public Criteria andCommentIsNull() {
            addCriterion("`comment` is null");
            return (Criteria) this;
        }

        public Criteria andCommentIsNotNull() {
            addCriterion("`comment` is not null");
            return (Criteria) this;
        }

        public Criteria andCommentEqualTo(Integer value) {
            addCriterion("`comment` =", value, "comment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCommentEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("`comment` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommentNotEqualTo(Integer value) {
            addCriterion("`comment` <>", value, "comment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCommentNotEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("`comment` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommentGreaterThan(Integer value) {
            addCriterion("`comment` >", value, "comment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCommentGreaterThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("`comment` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommentGreaterThanOrEqualTo(Integer value) {
            addCriterion("`comment` >=", value, "comment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCommentGreaterThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("`comment` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommentLessThan(Integer value) {
            addCriterion("`comment` <", value, "comment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCommentLessThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("`comment` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommentLessThanOrEqualTo(Integer value) {
            addCriterion("`comment` <=", value, "comment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andCommentLessThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("`comment` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommentIn(List<Integer> values) {
            addCriterion("`comment` in", values, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentNotIn(List<Integer> values) {
            addCriterion("`comment` not in", values, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentBetween(Integer value1, Integer value2) {
            addCriterion("`comment` between", value1, value2, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentNotBetween(Integer value1, Integer value2) {
            addCriterion("`comment` not between", value1, value2, "comment");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andVersionIsNull() {
            addCriterion("version is null");
            return (Criteria) this;
        }

        public Criteria andVersionIsNotNull() {
            addCriterion("version is not null");
            return (Criteria) this;
        }

        public Criteria andVersionEqualTo(Integer value) {
            addCriterion("version =", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andVersionEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("version = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionNotEqualTo(Integer value) {
            addCriterion("version <>", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andVersionNotEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("version <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThan(Integer value) {
            addCriterion("version >", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andVersionGreaterThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("version > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThanOrEqualTo(Integer value) {
            addCriterion("version >=", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andVersionGreaterThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("version >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionLessThan(Integer value) {
            addCriterion("version <", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andVersionLessThanColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("version < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionLessThanOrEqualTo(Integer value) {
            addCriterion("version <=", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andVersionLessThanOrEqualToColumn(MealOrderGoodsCalamity.Column column) {
            addCriterion(new StringBuilder("version <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionIn(List<Integer> values) {
            addCriterion("version in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotIn(List<Integer> values) {
            addCriterion("version not in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionBetween(Integer value1, Integer value2) {
            addCriterion("version between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotBetween(Integer value1, Integer value2) {
            addCriterion("version not between", value1, value2, "version");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        private MealOrderGoodsCalamityExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        protected Criteria(MealOrderGoodsCalamityExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public MealOrderGoodsCalamityExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(MealOrderGoodsCalamity.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(MealOrderGoodsCalamity.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table meal_order_goods_calamity
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table meal_order_goods_calamity
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table meal_order_goods_calamity
         *
         * @mbg.generated
         */
        void example(com.meal.common.dto.MealOrderGoodsCalamityExample example);
    }
}